{"version":3,"file":"js/dashboard.4f16f1f9.js","mappings":"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","sources":["webpack://DINGGUL/./node_modules/@kurkle/color/dist/color.esm.js","webpack://DINGGUL/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://DINGGUL/./node_modules/chart.js/dist/chart.js","webpack://DINGGUL/./node_modules/chart.js/auto/auto.js","webpack://DINGGUL/./src/views/dashboard/Chart.vue","webpack://DINGGUL/./src/views/dashboard/Chart.vue?0598","webpack://DINGGUL/./src/views/dashboard/Members.vue","webpack://DINGGUL/./src/views/dashboard/Members.vue?94ee","webpack://DINGGUL/./src/views/dashboard/MovePosts.vue","webpack://DINGGUL/./src/views/dashboard/MovePosts.vue?3024","webpack://DINGGUL/./src/views/dashboard/ManagePosts.vue","webpack://DINGGUL/./src/views/dashboard/ManagePosts.vue?c3e5","webpack://DINGGUL/./src/views/dashboard/AddMenu.vue","webpack://DINGGUL/./src/views/dashboard/AddMenu.vue?2b68","webpack://DINGGUL/./src/views/dashboard/EditMain.vue","webpack://DINGGUL/./src/views/dashboard/EditMain.vue?29a8","webpack://DINGGUL/./src/views/dashboard/EditSub.vue","webpack://DINGGUL/./src/views/dashboard/EditSub.vue?c753","webpack://DINGGUL/./src/views/dashboard/ManageMenus.vue","webpack://DINGGUL/./src/views/dashboard/ManageMenus.vue?bd38","webpack://DINGGUL/./src/views/dashboard/Dashboard.vue","webpack://DINGGUL/./src/views/dashboard/Dashboard.vue?ba7f"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.2.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.2.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.2.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","<template>\r\n  <div class=\"chart\">\r\n    <div class=\"wrap_count\">\r\n      <div class=\"wrap_visit_count\">\r\n        <h2>총 방문자</h2>\r\n        <span>{{ randomNumber1 }}명</span>\r\n      </div>\r\n      <div class=\"wrap_view_count\">\r\n        <h2>총 조회수</h2>\r\n        <span>{{ randomNumber2 }}회</span>\r\n      </div>\r\n      <div class=\"wrap_post_count\">\r\n        <h2>총 포스팅</h2>\r\n        <span>{{ randomNumber3 }}개</span>\r\n      </div>\r\n      <div class=\"wrap_day_count\">\r\n        <h2>블로그 운영</h2>\r\n        <span>{{ randomNumber4 }}일 째</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"wrap_chart\" style=\"display: flex;\">\r\n      <div class=\"wrap_visit_chart\" style=\"width:50%;\">\r\n      <h2>연간 사이트 방문</h2>\r\n      <div class=\"visit_chart\">\r\n        <canvas ref=\"CHART1_EL\"></canvas>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"wrap_views_chart\" style=\"width:50%;\">\r\n      <h2>연간 페이지 뷰</h2>\r\n      <div class=\"views_chart\">\r\n        <canvas ref=\"CHART2_EL\"></canvas>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { Chart } from 'chart.js/auto'\r\n\r\nconst CHART1_EL = ref(null)\r\nconst CHART2_EL = ref(null)\r\nconst colors1 = ['#36a2eb', '#ff6384', '#4bc0c0', '#ff9f40', '#9966ff', '#ffcd56']\r\nconst colors2 = ['#36a2eb', '#ff6384', '#4bc0c0', '#ff9f40', '#9966ff', '#ffcd56']\r\n\r\nconst data = []\r\nconst randomNumber1 = ref(Math.floor(Math.random() * 10000) + 1)\r\nconst randomNumber2 = ref(Math.floor(Math.random() * 10000) + 1)\r\nconst randomNumber3 = ref(Math.floor(Math.random() * 10000) + 1)\r\nconst randomNumber4 = ref(Math.floor(Math.random() * 1000) + 1)\r\n\r\nlet prev = 100\r\nfor (let i = 0; i < 12; i++) {\r\n  prev += 5 - Math.random() * 10\r\n  data.push({ x: i, y: prev })\r\n}\r\n\r\nconst creatChart = () => {\r\n  new Chart(CHART1_EL.value, {\r\n    type: 'line',\r\n    data: {\r\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n      datasets: [\r\n        {\r\n          data: data,\r\n          lineTension: 0.4,\r\n          borderColor: 'rgba(0, 0, 0, 0.1)',\r\n          pointBorderColor: colors2,\r\n          pointBackgroundColor: colors2,\r\n          backgroundColor: 'rgba(0, 0, 0, 0.07)',\r\n          borderWidth: 1,\r\n          fill: true,\r\n        },\r\n      ],\r\n    },\r\n    options: {\r\n      maintainAspectRatio: false,\r\n      scales: {},\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n      },\r\n    },\r\n  })\r\n\r\n  new Chart(CHART2_EL.value, {\r\n    type: 'bar',\r\n    data: {\r\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n      datasets: [\r\n        {\r\n          data: [2, 8, 12, 30, 5, 15, 10, 32, 55, 8, 22, 4],\r\n          borderWidth: 0.1,\r\n          backgroundColor: colors2,\r\n          borderRadius: 9999,\r\n          barPercentage: 0.25,\r\n        },\r\n      ],\r\n    },\r\n    options: {\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n      },\r\n    },\r\n  })\r\n}\r\n\r\nconst shuffle = (colors1, colors2) => {\r\n  colors1.sort(() => Math.random() - 0.5)\r\n  colors2.sort(() => Math.random() - 0.5)\r\n}\r\n\r\nonMounted(() => {\r\n  shuffle(colors1, colors2)\r\n  creatChart()\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\r\n.chart {\r\n  .wrap_count {\r\n    @include flex;\r\n\r\n    & > div {\r\n      @include flex(column, $jc: center, $ai: center);\r\n      width: 100%;\r\n      height: 9.6rem;\r\n      margin: 0 0.8rem 0 0;\r\n      border-radius: 1.6rem;\r\n\r\n      &:last-child {\r\n        margin: 0;\r\n      }\r\n\r\n      &:nth-child(1) {\r\n        background: #ffeedf;\r\n        h2 {\r\n          color: #fda640;\r\n        }\r\n      }\r\n\r\n      &:nth-child(2) {\r\n        background: #e3ffdc;\r\n        h2 {\r\n          color: #48c669;\r\n        }\r\n      }\r\n\r\n      &:nth-child(3) {\r\n        background: #dafeff;\r\n        h2 {\r\n          color: #4bc0c0;\r\n        }\r\n      }\r\n\r\n      &:nth-child(4) {\r\n        background: #ffebf2;\r\n        h2 {\r\n          color: #ff6384;\r\n        }\r\n      }\r\n\r\n      h2 {\r\n        margin: 0 0 0.4rem;\r\n        font-size: 1.6rem;\r\n      }\r\n\r\n      span {\r\n        font-size: 1.4rem;\r\n        letter-spacing: 0.1rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  .wrap_visit_chart,\r\n  .wrap_views_chart {\r\n    margin: 6.4rem 0 0;\r\n\r\n    h2 {\r\n      font-size: 2rem;\r\n      color: var(--text4);\r\n      margin: 0 0 2.4rem;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import script from \"./Chart.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Chart.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Chart.vue?vue&type=style&index=0&id=5a1f629b&lang=scss&rel=stylesheet%2Fscss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\kimku\\\\OneDrive\\\\바탕 화면\\\\FRONTEND\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5a1f629b\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"member-list\">\r\n    <div class=\"wrap_table\">\r\n      <div class=\"table-header\">\r\n          <div class=\"table-head\" v-for=\"head in tableHeads\" :key=\"head\">\r\n            {{ head }}\r\n          </div>\r\n      </div>\r\n\r\n      <div class=\"table-body\">\r\n          <div class=\"table-row\" v-for=\"(member, idx) in members\" :key=\"idx\">\r\n            <div class=\"table-cell\">\r\n              <input type=\"checkbox\" ref=\"CHECKBOX_EL\" :data-index=\"idx\" class=\"checkbox\" aria-label=\"checkbox\"/>\r\n            </div>\r\n\r\n            <div class=\"table-cell\">\r\n              <Image class=\"avatar img_avatar\" :src=\"member.avatar?.thumbnail ?? DEFAULT_AVATAR_64\"  />\r\n            </div>\r\n\r\n            <div class=\"table-cell\">\r\n              <span class=\"email\">{{ member.email }}</span>\r\n            </div>\r\n\r\n            <div class=\"table-cell\">\r\n              <span class=\"nickname\">{{ member.nickname }}</span>\r\n            </div>\r\n\r\n            <div class=\"table-cell\">\r\n              <span v-for=\"role in member.roles\" :key=\"role\" class=\"role\" :class=\"role.name\">{{ role.name }}</span>\r\n            </div>\r\n\r\n            <div class=\"table-cell\">\r\n              <span class=\"createdAt\">{{ getTime(member.createdAt) }}</span>\r\n            </div>\r\n\r\n            <div class=\"table-cell\">\r\n              <span class=\"lastLoggedAt\">{{ getTime(member.updatedAt) }}</span>\r\n            </div>\r\n\r\n            <div class=\"table-cell\">\r\n              <span class=\"isActive\">{{ member.isActive ? '활성' : '비활성' }}</span>\r\n            </div>\r\n\r\n            <div class=\"table-cell\">\r\n              <Button class=\"btn_dropbox\" :size=\"'sm'\" :svg=\"'more'\" @click=\"$refs.KEBAB_SLOT_EL[idx].onToggle()\" aria-label=\"option\"/>\r\n\r\n              <Kebab ref=\"KEBAB_SLOT_EL\" :dropboxItems=\"{ '회원 정보 수정': () => onUpdateMember(member) }\" />\r\n            </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"wrap_btns\">\r\n      <Button :shape=\"'line-round'\" :size=\"'sm'\" @click=\"() => onUpdateActive(true)\" class=\"btn_active-member\">회원 활성</Button>\r\n      <Button :shape=\"'line-round'\" :size=\"'sm'\" @click=\"() => onUpdateActive(false)\" class=\"btn_block-member\">회원 정지</Button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject, computed } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { getTime } from '../../common/time.js'\r\nimport DEFAULT_AVATAR_64 from '../../assets/default_avatar_64.webp'\r\n\r\nconst { dispatch, commit, state } = useStore()\r\n\r\nconst TOAST_EL = inject('TOAST_EL')\r\nconst ACCOUNT_EL = inject('ACCOUNT_EL')\r\nconst CHECKBOX_EL = ref(null)\r\n\r\nconst members = computed(() => state.auth.members)\r\nconst editMembers = computed(() => state.auth.editMembers)\r\n\r\nconst tableHeads = ref(['선택', '아바타', '이메일', '닉네임', '권한', '가입일', '마지막 로그인', '상태', '옵션'])\r\n\r\nconst getMembers = async () => {\r\n  const { success, error } = await dispatch('auth/getMembers')\r\n  if (!success) TOAST_EL.value.open('error', error)\r\n}\r\n\r\n/* 회원 정보 수정 : modal */\r\nconst onUpdateMember = (member) => {\r\n  commit('auth/SET_EDIT_MEMBERS', member)\r\n  ACCOUNT_EL.value.open('admin-update')\r\n}\r\n\r\n/* 현재 체크박스 선택된 멤버들 */\r\nconst checkedMember = () => {\r\n  let checkedMembers = CHECKBOX_EL.value.filter((checkbox) => checkbox.checked)\r\n\r\n  for (const member of checkedMembers) {\r\n    const m = members.value.at(member.dataset.index)\r\n    commit('auth/SET_EDIT_MEMBERS', { _id: m._id, nickname: m.nickname, isActive: m.isActive })\r\n  }\r\n}\r\n\r\n/* 체크된 항목 active 변경 */\r\nconst onUpdateActive = (active) => {\r\n  if (CHECKBOX_EL.value.some((checkbox) => checkbox.checked)) {\r\n    checkedMember()\r\n    commit('auth/EDIT_MEMBERS_ACTIVE', active)\r\n    updateMembers(editMembers.value, active)\r\n  } else {\r\n    alert('선택된 항목이 없습니다.')\r\n  }\r\n}\r\n\r\n/* 회원 정보 수정 : checkbox */\r\nconst updateMembers = async (payload, active) => {\r\n  const { success, error } = await dispatch('auth/updateMembers', payload)\r\n  if (success) {\r\n    TOAST_EL.value.open(\r\n      'success',\r\n      payload.length > 1 ? `${payload.at(0).nickname}님 외 ${payload.length - 1}명이 ${active ? '활성' : '정지'} 되었습니다.` : `${payload.at(0).nickname}님이 ${active ? '활성' : '정지'} 되었습니다`,\r\n    )\r\n    resetCheckbox()\r\n  } else {\r\n    TOAST_EL.value.open('error', error)\r\n  }\r\n}\r\n\r\n/* 체크박스 초기화 */\r\nconst resetCheckbox = () => {\r\n  CHECKBOX_EL.value.forEach((checkbox) => (checkbox.checked = false))\r\n}\r\n\r\nawait getMembers()\r\n</script>\r\n\r\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\r\n@import '../../scss/table.scss';\r\n.wrap_table {\r\n  display: table;\r\n  font-size: 1.4rem;\r\n  width: 100%;\r\n\r\n  .avatar {\r\n  width: 4.8rem;\r\n  height: 4.8rem;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  border: 1px solid var(--border3);\r\n}\r\n\r\n.role {\r\n  padding: 0.4rem 0.8rem;\r\n  border-radius: 0.4rem;\r\n  font-size: 1rem;\r\n  letter-spacing: 0.1rem;\r\n  margin: 0 0.4rem 0 0;\r\n\r\n  &:last-child {\r\n    margin: 0;\r\n  }\r\n\r\n  &.ADMIN {\r\n    background-color: var(--error-light);\r\n    color: var(--error);\r\n  }\r\n  &.USER {\r\n    background-color: #ececec;\r\n    color: var(--text4);\r\n  }\r\n}\r\n}\r\n\r\n.wrap_btns {\r\n  @include flex-right;\r\n  margin:2.4rem 0 0;\r\n\r\n  .btn {\r\n    margin: 0 0 0 0.8rem;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./Members.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Members.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Members.vue?vue&type=style&index=0&id=c79f1138&lang=scss&rel=stylesheet%2Fscss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\kimku\\\\OneDrive\\\\바탕 화면\\\\FRONTEND\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c79f1138\"]])\n\nexport default __exports__","<template>\r\n  <PopupModal ref=\"POPUP_EL\">\r\n    <div class=\"wrap_move-posts\">\r\n      <!-- Close button -->\r\n      <div class=\"wrap_btn-close\">\r\n        <Button class=\"btn_close\" :svg=\"'close'\" :theme=\"'primary'\" @click=\"close\" />\r\n      </div>\r\n\r\n      <div class=\"wrap_menu\">\r\n        <div class=\"main\">\r\n          <select v-model=\"main\" @change=\"onChangeMainMenu\">\r\n            <option selected disabled hidden :value=\"''\">메뉴 선택</option>\r\n            <option v-for=\"main in Object.keys($store.state.menu.menus)\" :key=\"main\">{{ main }}</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"sub\">\r\n          <select required v-model=\"sub\" :disabled=\"!main\" @change=\"onChangeSubMenu\">\r\n            <option selected disabled hidden :value=\"''\">게시판 선택</option>\r\n            <template v-if=\"main\">\r\n              <option v-for=\"{ sub } in $store.state.menu.menus[main]\" :key=\"sub\" :value=\"sub\">{{ sub }}</option>\r\n            </template>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"category\">\r\n          <select v-model=\"category\" :disabled=\"!sub\">\r\n            <option selected disabled hidden :value=\"''\">카테고리 선택</option>\r\n            <template v-if=\"sub\">\r\n              <option v-for=\"category in $store.state.menu.categories\" :key=\"category\" :value=\"category\">{{ category }}</option>\r\n            </template>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <Button shape=\"fill-round-full\" theme=\"primary\" @click=\"onUpdatePosts\" class=\"btn-submit\">게시물 이동하기</Button>\r\n    </div>\r\n  </PopupModal>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject, computed } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport PopupModal from '../../components/ui/PopupModal.vue'\r\n\r\nconst { state, commit, dispatch } = useStore()\r\n\r\nconst editPosts = computed(() => state.post.editPosts)\r\n\r\nconst TOAST_EL = inject('TOAST_EL')\r\nconst POPUP_EL = ref(null)\r\n\r\nconst main = computed({\r\n  get: () => state.post.main ?? '',\r\n  set: (value) => commit('post/SET_MAIN', value),\r\n})\r\nconst sub = computed({\r\n  get: () => state.post.sub ?? '',\r\n  set: (value) => commit('post/SET_SUB', value),\r\n})\r\nconst category = computed({\r\n  get: () => state.post.category ?? '',\r\n  set: (value) => commit('post/SET_CATEGORY', value),\r\n})\r\n\r\nconst onChangeMainMenu = () => {\r\n  document.body.querySelector('div.sub select').selectedIndex = 0\r\n  document.body.querySelector('div.category select').selectedIndex = 0\r\n}\r\n\r\nconst onChangeSubMenu = () => {\r\n  document.body.querySelector('div.category select').selectedIndex = 0\r\n}\r\n\r\nconst setPayload = () => {\r\n  commit('post/CHANGE_EDIT_POSTS')\r\n}\r\n\r\nconst onUpdatePosts = async () => {\r\n  setPayload()\r\n  const { success, error } = await dispatch('post/updatePosts', editPosts.value)\r\n  if (success) {\r\n    TOAST_EL.value.open('success', '게시물 이동이 완료되었습니다.')\r\n    close()\r\n  } else {\r\n    TOAST_EL.value.open('error', error)\r\n  }\r\n}\r\n\r\nconst open = () => {\r\n  POPUP_EL.value?.open()\r\n}\r\n\r\nconst close = () => {\r\n  POPUP_EL.value?.close()\r\n  commit('post/UNSET_POST')\r\n}\r\n\r\ndefineExpose({ open, close })\r\n</script>\r\n\r\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\r\n.wrap_move-posts {\r\n  background: #fff;\r\n  padding: 3.2rem 3.2rem;\r\n  font-size: 1.4rem;\r\n  color: var(--text4);\r\n  width: 37rem;\r\n  border-radius: 3.2rem;\r\n  overflow-y: auto;\r\n\r\n  @include mobile {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 0;\r\n  }\r\n\r\n  label {\r\n    color: var(--primary);\r\n  }\r\n\r\n  .wrap_btn-close {\r\n    @include flex-right;\r\n    margin: 0 0 2.4rem;\r\n  }\r\n\r\n  .wrap_menu {\r\n    margin:0 0 3.2rem;\r\n\r\n    div {\r\n      width:100%;\r\n      border-bottom: 1px solid var(--border2);\r\n      padding: 0 0 1.6rem;\r\n      margin:1.6rem 0 0;\r\n    }\r\n\r\n    h2 {\r\n      text-transform: uppercase;\r\n      width: 78%;\r\n    }\r\n\r\n    input {\r\n      text-transform: uppercase;\r\n      width: 78%;\r\n      font-size: 1.5em;\r\n      padding: 0 1.2rem 0 0;\r\n    }\r\n  }\r\n\r\n  .wrap_categories,\r\n  .wrap_sub {\r\n    padding: 3.2rem 0 0;\r\n\r\n    ul {\r\n      margin: 0 0 3.2rem 0;\r\n      li {\r\n        margin: 1.6rem 0 0;\r\n        font-size: 1.4rem;\r\n        cursor: pointer;\r\n\r\n        .btn_del {\r\n          margin: 0 0 0 0.4rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .wrap_add-sub {\r\n    @include flex($ai: initial);\r\n    margin: 0.8rem 0 0 0;\r\n\r\n    input {\r\n      flex: auto;\r\n      border-bottom: 1px solid #ddd;\r\n      margin: 0 1.2rem 0 0;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import script from \"./MovePosts.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MovePosts.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MovePosts.vue?vue&type=style&index=0&id=5f46e208&lang=scss&rel=stylesheet%2Fscss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\kimku\\\\OneDrive\\\\바탕 화면\\\\FRONTEND\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5f46e208\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"posts-list\">\r\n    <div class=\"wrap_table\">\r\n      <div class=\"table-header\">\r\n        <div class=\"table-head\" v-for=\"head in tableHeads\" :key=\"head\">\r\n          {{ head }}\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"table-body\">\r\n        <div class=\"table-row\" v-for=\"(post, idx) in posts\" :key=\"idx\">\r\n          <div class=\"table-cell\">\r\n            <input type=\"checkbox\" ref=\"CHECKBOX_EL\" :data-index=\"idx\" class=\"checkbox\" aria-label=\"checkbox\"/>\r\n          </div>\r\n\r\n          <div class=\"table-cell\">\r\n            <router-link :to=\"{ name: 'post', params: { postId: post._id } }\" class=\"a_title\">\r\n              {{ post.title }}\r\n            </router-link>\r\n          </div>\r\n\r\n          <div class=\"table-cell\">\r\n            <span class=\"author\">{{ post.author.nickname }}</span>\r\n          </div>\r\n\r\n          <div class=\"table-cell\">\r\n            <span class=\"location\">위치</span>\r\n          </div>\r\n\r\n          <div class=\"table-cell\">\r\n            <span class=\"category\">{{ post.category }}</span>\r\n          </div>\r\n\r\n          <div class=\"table-cell\">\r\n            <span class=\"likeCount\">{{ post.likeCount ? post.likeCount : '0' }}</span>\r\n          </div>\r\n\r\n          <div class=\"table-cell\">\r\n            <span class=\"commentCount\">{{ post.commentCount ? post.commentCount : '0' }}</span>\r\n          </div>\r\n\r\n          <div class=\"table-cell\">\r\n            <span class=\"createdAt\">{{ getTime(post.createdAt) }}</span>\r\n          </div>\r\n\r\n          <div class=\"table-cell\">\r\n            <span class=\"updatedAt\">{{ getTime(post.updatedAt) }}</span>\r\n          </div>\r\n\r\n          <div class=\"table-cell\">\r\n            <span class=\"isActive\">{{ post.isActive ? '활성' : '비활성' }}</span>\r\n          </div>\r\n\r\n          <div class=\"table-cell\">\r\n            <Button class=\"btn_dropbox\" :size=\"'sm'\" :svg=\"'more'\" @click=\"$refs.KEBAB_SLOT_EL[idx].onToggle()\" aria-label=\"option\"/>\r\n\r\n            <Kebab ref=\"KEBAB_SLOT_EL\" :dropboxItems=\"{ '게시글 수정': () => onUpdatePost(post._id) }\" />\r\n          </div>\r\n        </div>\r\n        <Observer :page=\"page\" @update=\"onUpdatePage\"></Observer>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"wrap_btns\">\r\n      <Button :shape=\"'line-round'\" :size=\"'sm'\" @click=\"() => onUpdateActive(true)\" class=\"btn_active-member\">게시 활성</Button>\r\n      <Button :shape=\"'line-round'\" :size=\"'sm'\" @click=\"() => onUpdateActive(false)\" class=\"btn_block-member\">게시 정지</Button>\r\n      <Button :shape=\"'line-round'\" :size=\"'sm'\" @click=\"onUpdatePosts\" class=\"btn_move\">게시물 이동</Button>\r\n    </div>\r\n\r\n    <MovePosts ref=\"MOVE_POSTS_EL\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject, computed } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport { getTime } from '../../common/time.js'\r\nimport Observer from '../../components/global/Observer.vue'\r\nimport MovePosts from '../dashboard/MovePosts.vue'\r\n\r\nconst { state, dispatch, commit } = useStore()\r\nconst { push } = useRouter()\r\n\r\nconst TOAST_EL = inject('TOAST_EL')\r\nconst CHECKBOX_EL = ref(null)\r\nconst MOVE_POSTS_EL = ref(null)\r\n\r\nconst tableHeads = ref(['선택', '글 제목', '작성자', '위치', '카테고리', '좋아요', '댓글 수', '등록일', '수정일', '상태', '옵션'])\r\n\r\nconst posts = ref([])\r\nconst maxCount = ref(1)\r\nconst page = ref(1)\r\n\r\nconst limit = ref(5)\r\nconst maxPage = computed(() => Math.ceil(maxCount.value / limit.value))\r\n\r\nconst main = ref(null)\r\nconst sub = ref(null)\r\nconst category = ref('전체')\r\nconst sort = ref(null)\r\nconst searchText = ref(null)\r\n\r\nconst editPosts = computed(() => state.post.editPosts)\r\n\r\nconst onUpdatePage = (newPage) => {\r\n  if (maxPage.value < newPage) return\r\n\r\n  page.value = newPage\r\n  getPosts(newPage)\r\n}\r\n\r\nconst getPosts = async (curPage) => {\r\n  const query = {\r\n    skip: (page.value - 1) * limit.value,\r\n    limit: limit.value,\r\n    category: category.value,\r\n  }\r\n\r\n  const subQuery = {\r\n    main: main.value,\r\n    sub: sub.value,\r\n    sort: sort.value,\r\n    searchText: searchText.value,\r\n  }\r\n\r\n  Object.entries(subQuery).forEach(([key, value]) => {\r\n    if (value) query[key] = value\r\n  })\r\n\r\n  const res = await dispatch('post/getPosts', query)\r\n\r\n  if (!res.success) throw new Error('게시물을 받아오는 도중 에러가 발생하였습니다.')\r\n\r\n  if (res.maxCount) maxCount.value = res.maxCount\r\n  posts.value.splice((curPage - 1) * limit.value, limit.value, ...res.posts)\r\n}\r\n\r\n/* 단일 post 수정 : editor */\r\nconst onUpdatePost = (id) => {\r\n  if (!id) return\r\n  push({ name: 'editor', query: { postId: id } })\r\n}\r\n\r\n/* 다중 게시글 이동 : modal */\r\nconst onUpdatePosts = () => {\r\n  checkedPosts()\r\n  MOVE_POSTS_EL.value.open()\r\n}\r\n\r\n/* 현재 체크박스 선택된 게시글 */\r\nconst checkedPosts = () => {\r\n  let checkedPosts = CHECKBOX_EL.value.filter((checkbox) => checkbox.checked)\r\n\r\n  for (const post of checkedPosts) {\r\n    const p = posts.value.at(post.dataset.index)\r\n    \r\n    commit(checkedPosts.length > 1 ? 'post/SET_EDIT_POSTS' : 'post/SET_POST', { \r\n      _id: p._id,\r\n      main: p.main,\r\n      sub: p.sub,\r\n      category: p.category,\r\n      isActive: p.isActive\r\n    })\r\n  }\r\n}\r\n\r\n/* 체크된 항목 active 변경 */\r\nconst onUpdateActive = (active) => {\r\n  if (CHECKBOX_EL.value.some((checkbox) => checkbox.checked)) {\r\n    checkedPosts()\r\n    commit('post/ACTIVE_EDIT_POSTS', active)\r\n    updatePosts()\r\n  } else {\r\n    alert('선택된 항목이 없습니다.')\r\n  }\r\n}\r\n\r\n/* 다중 게시글 수정 : checkbox */\r\nconst updatePosts = async () => {\r\n  const { success, error } = await dispatch('post/updatePosts', editPosts.value)\r\n  if (success) {\r\n    TOAST_EL.value.open('success', '게시글이 변경되었습니다.')\r\n    resetCheckbox()\r\n  } else {\r\n    TOAST_EL.value.open('error', error)\r\n  }\r\n}\r\n\r\n/* 체크박스 초기화 */\r\nconst resetCheckbox = () => {\r\n  CHECKBOX_EL.value.forEach((checkbox) => (checkbox.checked = false))\r\n}\r\n\r\nawait getPosts()\r\n</script>\r\n\r\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\r\n@import '../../scss/table.scss';\r\n.wrap_table {\r\n  display: table;\r\n  font-size: 1.4rem;\r\n  width: 100%;\r\n\r\n  .table-cell {\r\n    padding: 2.4rem 1.6rem;\r\n  }\r\n}\r\n\r\n.wrap_btns {\r\n  @include flex-right;\r\n  margin:2.4rem 0 0;\r\n\r\n  .btn {\r\n    margin: 0 0 0 0.8rem;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./ManagePosts.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManagePosts.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ManagePosts.vue?vue&type=style&index=0&id=7f7e532f&lang=scss&rel=stylesheet%2Fscss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\kimku\\\\OneDrive\\\\바탕 화면\\\\FRONTEND\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7f7e532f\"]])\n\nexport default __exports__","<template>\r\n  <PopupModal ref=\"POPUP_EL\">\r\n    <div class=\"wrap_add-menu\">\r\n      <!-- Close button -->\r\n      <div class=\"wrap_btn-close\">\r\n        <Button class=\"btn_close\" :svg=\"'close'\" :theme=\"'primary'\" @click=\"close\" />\r\n      </div>\r\n\r\n      <h2>Create Main Menu</h2>\r\n\r\n      <div class=\"wrap_menu\">\r\n        <label>메인 메뉴 이름</label>\r\n        <input type=\"text\" v-model=\"mainName\" ref=\"INPUT_NAME_EL\" />\r\n\r\n        <label>서브 메뉴 이름</label>\r\n        <input type=\"text\" v-model=\"subName\" />\r\n\r\n        <div class=\"wrap_categories\">\r\n          <ul v-if=\"categories.length\">\r\n            <label>카테고리</label>\r\n            <li v-for=\"(category, idx) in categories\" :key=\"idx\" :data-index=\"idx\">\r\n              <span>{{ category }}</span>\r\n              <span class=\"btn_del\" @click=\"() => onDelCategory(idx)\">❌</span>\r\n            </li>\r\n          </ul>\r\n\r\n          <label>카테고리 추가</label>\r\n          <div class=\"wrap_add-category\">\r\n            <input label=\"카테고리명\" type=\"text\" v-model=\"categoryName\" />\r\n            <Button size=\"sm\" shape=\"line-round\" theme=\"primary\" @click=\"onAddCategory\">추가</Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Button shape=\"fill-round-full\" theme=\"primary\" @click=\"onCreateMenu\" class=\"btn-submit\">생성하기</Button>\r\n    </div>\r\n  </PopupModal>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject, nextTick } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport PopupModal from '../../components/ui/PopupModal.vue'\r\n\r\nconst { dispatch } = useStore()\r\n\r\nconst TOAST_EL = inject('TOAST_EL')\r\nconst POPUP_EL = ref(null)\r\nconst INPUT_NAME_EL = ref(null)\r\n\r\nconst mainName = ref(null)\r\nconst subName = ref(null)\r\nconst categoryName = ref(null)\r\n\r\nconst categories = ref([])\r\n\r\nconst onAddCategory = () => {\r\n  if (categoryName.value && mainName.value && subName.value) {\r\n    categories.value.push(categoryName.value)\r\n    categoryName.value = null\r\n  } else {\r\n    TOAST_EL.value.open('error', `${mainName.value && subName.value ? '카테고리명을 입력해주세요.' : 'main, sub는 필수 항목입니다.'}`)\r\n  }\r\n}\r\n\r\nconst onDelCategory = (idx) => {\r\n  categories.value.splice(idx, 1)\r\n}\r\n\r\nconst onCreateMenu = async () => {\r\n  if (mainName.value && subName.value) {\r\n    const { success, error } = await dispatch('menu/createMenu', { main: mainName.value, sub: subName.value, categories: categories.value })\r\n    if (success) {\r\n      TOAST_EL.value.open('success', `${mainName.value} 메뉴가 추가되었습니다.`)\r\n      close()\r\n    } else {\r\n      TOAST_EL.value.open('error', error)\r\n    }\r\n  } else {\r\n    TOAST_EL.value.open('error', 'main, sub는 필수 항목입니다.')\r\n  }\r\n}\r\n\r\nconst open = async () => {\r\n  POPUP_EL.value?.open()\r\n  await nextTick()\r\n  INPUT_NAME_EL.value.focus()\r\n}\r\n\r\nconst close = () => {\r\n  POPUP_EL.value?.close()\r\n  mainName.value = null\r\n  subName.value = null\r\n  categories.value = []\r\n}\r\n\r\ndefineExpose({ open, close })\r\n</script>\r\n\r\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\r\n.wrap_add-menu {\r\n  background: #fff;\r\n  padding: 3.2rem 3.2rem;\r\n  font-size: 1.4rem;\r\n  color: var(--text4);\r\n  width: 37rem;\r\n  border-radius: 3.2rem;\r\n  overflow-y: auto;\r\n\r\n  @include mobile {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 0;\r\n  }\r\n\r\n  h2 {\r\n    @include flex($jc: center);\r\n    color: var(--primary);\r\n    margin:0 0 3.2rem;\r\n    font-weight: 500;\r\n  }\r\n\r\n  label {\r\n    color: var(--text4);\r\n    font-weight: 500;\r\n  }\r\n\r\n  .wrap_btn-close {\r\n    @include flex-right;\r\n    margin: 0 0 1.2rem;\r\n  }\r\n\r\n  .wrap_menu {\r\n    @include flex(column, $ai: start);\r\n\r\n    input {\r\n      width: 100%;\r\n      text-transform: uppercase;\r\n      font-size: 1.4rem;\r\n      padding: 0 0 1.2rem 0;\r\n      margin: 0.8rem 0 3.2rem;\r\n      border-bottom: 1px solid var(--border2);\r\n    }\r\n  }\r\n\r\n  .wrap_categories {\r\n    width:100%; \r\n    \r\n    input {\r\n      width: 78%;\r\n    }\r\n\r\n    ul {\r\n      margin: 0 0 3.2rem 0;\r\n      li {\r\n        margin: 1.6rem 0 0;\r\n        font-size: 1.4rem;\r\n        cursor: pointer;\r\n\r\n        .btn_del {\r\n          margin: 0 0 0 0.4rem;\r\n        }\r\n      }\r\n\r\n      label {\r\n        color: var(--primary);\r\n      }\r\n    }\r\n  }\r\n\r\n  .wrap_add-category {\r\n    @include flex;\r\n    margin: 0.8rem 0 0;\r\n\r\n    input {\r\n      flex: auto;\r\n      border-bottom: 1px solid #ddd;\r\n      margin: 0 1.2rem 0 0;\r\n    }\r\n  }\r\n\r\n  .btn-submit {\r\n    margin: 3.2rem 0 0;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./AddMenu.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddMenu.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AddMenu.vue?vue&type=style&index=0&id=5c4b9707&lang=scss&rel=stylesheet%2Fscss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\kimku\\\\OneDrive\\\\바탕 화면\\\\FRONTEND\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5c4b9707\"]])\n\nexport default __exports__","<template>\r\n  <PopupModal ref=\"POPUP_EL\">\r\n    <div class=\"wrap_edit-menu\">\r\n      <!-- Close button -->\r\n      <div class=\"wrap_btn-close\">\r\n        <Button class=\"btn_close\" :svg=\"'close'\" :theme=\"'primary'\" @click=\"close\" />\r\n      </div>\r\n\r\n      <div class=\"wrap_menu\">\r\n        <h2 v-if=\"!editState\">{{ menu.main }}</h2>\r\n        <input v-else type=\"text\" v-model=\"mainName\" ref=\"INPUT_NAME_EL\" />\r\n        <Button size=\"sm\" shape=\"line-round\" theme=\"primary\" @click=\"onEdit\">{{ !editState ? '이름 변경' : '변경 완료' }}</Button>\r\n      </div>\r\n\r\n      <div class=\"wrap_sub\">\r\n        <label>서브 메뉴</label>\r\n        <ul>\r\n          <li v-for=\"(menu, idx) in $store.state.menu.editMenus\" :key=\"idx\" :data-index=\"idx\">\r\n            <span>{{ menu.sub }}</span>\r\n            <span class=\"btn_del\" @click=\"() => onDelSubMenu(idx)\">❌</span>\r\n          </li>\r\n        </ul>\r\n\r\n        <label>서브 메뉴 추가</label>\r\n        <div class=\"wrap_add-sub\">\r\n          <input label=\"서브명\" type=\"text\" v-model=\"subName\" />\r\n          <Button size=\"sm\" shape=\"line-round\" theme=\"primary\" @click=\"onCreateMenu\">추가</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </PopupModal>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject, nextTick, computed } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport PopupModal from '../../components/ui/PopupModal.vue'\r\n\r\nconst { state, commit, dispatch } = useStore()\r\nconst menu = computed(() => state.menu.editMenus.at(0))\r\n\r\nconst TOAST_EL = inject('TOAST_EL')\r\nconst POPUP_EL = ref(null)\r\nconst INPUT_NAME_EL = ref(null)\r\n\r\nconst editState = ref(false)\r\nconst mainName = ref(menu.value.main)\r\n\r\nconst subName = ref(null)\r\n\r\nconst onEdit = async () => {\r\n  if (!editState.value) {\r\n    editState.value = true\r\n    await nextTick()\r\n    INPUT_NAME_EL.value.focus()\r\n  } else {\r\n    mainName.value ? onUpdateMenu() : TOAST_EL.value.open('error', '메뉴명을 입력해주세요.')\r\n  }\r\n}\r\n\r\nconst onUpdateMenu = async () => {\r\n  const { success, error } = await dispatch('menu/updateMenu', {\r\n    menuId: menu.value._id,\r\n    payload: { main: mainName.value },\r\n  })\r\n  if (success) {\r\n    commit('menu/SET_EDIT_MENUS', state.menu.menus[mainName.value])\r\n    TOAST_EL.value.open('success', '메뉴 변경이 완료되었습니다.')\r\n    editState.value = false\r\n  } else {\r\n    TOAST_EL.value.open('error', error)\r\n  }\r\n}\r\n\r\nconst onCreateMenu = async () => {\r\n  if (subName.value) {\r\n    const { success, error } = await dispatch('menu/createMenu', { main: menu.value.main, sub: subName.value })\r\n    if (success) {\r\n      TOAST_EL.value.open('success', `${subName.value} 메뉴가 추가되었습니다.`)\r\n      subName.value = null\r\n    } else {\r\n      TOAST_EL.value.open('error', error)\r\n    }\r\n  } else {\r\n    TOAST_EL.value.open('error', '서브명을 입력해주세요.')\r\n  }\r\n}\r\n\r\nconst onDelSubMenu = async (idx) => {\r\n  const { success, error } = await dispatch('menu/deleteMenu', {\r\n    menuId: state.menu.editMenus.at(idx)._id,\r\n  })\r\n  if (success) {\r\n    TOAST_EL.value.open('success', `${state.menu.editMenus.at(idx).sub} 메뉴가 삭제되었습니다.`)\r\n    commit('menu/SET_EDIT_MENUS', state.menu.menus[menu.value.main])\r\n  } else {\r\n    TOAST_EL.value.open('error', error)\r\n  }\r\n}\r\n\r\nconst open = () => {\r\n  POPUP_EL.value?.open()\r\n}\r\n\r\nconst close = () => {\r\n  POPUP_EL.value?.close()\r\n}\r\n\r\ndefineExpose({ open, close })\r\n</script>\r\n\r\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\r\n.wrap_edit-menu {\r\n  background: #fff;\r\n  padding: 3.2rem 3.2rem;\r\n  font-size: 1.4rem;\r\n  color: var(--text4);\r\n  width: 37rem;\r\n  border-radius: 3.2rem;\r\n  overflow-y: auto;\r\n\r\n  @include mobile {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 0;\r\n  }\r\n\r\n  label {\r\n    color: var(--primary);\r\n  }\r\n\r\n  .wrap_btn-close {\r\n    @include flex-right;\r\n    margin: 0 0 2.4rem;\r\n  }\r\n\r\n  .wrap_menu {\r\n    @include flex;\r\n    border-bottom: 1px solid var(--border2);\r\n    padding: 0 0 1rem;\r\n\r\n    h2 {\r\n      text-transform: uppercase;\r\n      width: 78%;\r\n    }\r\n\r\n    input {\r\n      text-transform: uppercase;\r\n      width: 78%;\r\n      font-size: 1.5em;\r\n      padding: 0 1.2rem 0 0;\r\n    }\r\n  }\r\n\r\n  .wrap_sub {\r\n    padding: 3.2rem 0 0;\r\n\r\n    ul {\r\n      margin: 0 0 3.2rem 0;\r\n      li {\r\n        margin: 1.6rem 0 0;\r\n        font-size: 1.4rem;\r\n        cursor: pointer;\r\n\r\n        .btn_del {\r\n          margin: 0 0 0 0.4rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .wrap_add-sub {\r\n    @include flex($ai: initial);\r\n    margin:0.8rem 0 0 0;\r\n\r\n    input {\r\n      flex: auto;\r\n      border-bottom: 1px solid #ddd;\r\n      margin: 0 1.2rem 0 0;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import script from \"./EditMain.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditMain.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EditMain.vue?vue&type=style&index=0&id=628bc87b&lang=scss&rel=stylesheet%2Fscss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\kimku\\\\OneDrive\\\\바탕 화면\\\\FRONTEND\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-628bc87b\"]])\n\nexport default __exports__","<template>\r\n  <PopupModal ref=\"POPUP_EL\">\r\n    <div class=\"wrap_edit-menu\">\r\n      <!-- Close button -->\r\n      <div class=\"wrap_btn-close\">\r\n        <Button class=\"btn_close\" :svg=\"'close'\" :theme=\"'primary'\" @click=\"close\" />\r\n      </div>\r\n\r\n      <div class=\"wrap_menu\">\r\n        <h2 v-if=\"!editState\">{{ menu.sub }}</h2>\r\n        <input v-else type=\"text\" v-model=\"subName\" ref=\"INPUT_NAME_EL\" />\r\n        <Button v-if=\"!editState\" size=\"sm\" shape=\"line-round\" theme=\"primary\" @click=\"onEdit\"> {{ '이름 변경' }}</Button>\r\n      </div>\r\n\r\n      <div class=\"wrap_categories\">\r\n        <ul v-if=\"menu.categories.length\">\r\n          <label>카테고리</label>\r\n          <li v-for=\"(category, idx) in menu.categories\" :key=\"idx\" :data-index=\"idx\">\r\n            <span>{{ category }}</span>\r\n            <span class=\"btn_del\" @click=\"() => onDelCategory(idx)\">❌</span>\r\n          </li>\r\n        </ul>\r\n\r\n        <label>카테고리 추가</label>\r\n        <div class=\"wrap_add-category\">\r\n          <input label=\"카테고리명\" type=\"text\" v-model=\"categoryName\" />\r\n          <Button size=\"sm\" shape=\"line-round\" theme=\"primary\" @click=\"onAddCategory\">추가</Button>\r\n        </div>\r\n      </div>\r\n\r\n      <Button shape=\"fill-round-full\" theme=\"primary\" @click=\"onUpdateMenu\" class=\"btn-submit\">수정 완료</Button>\r\n    </div>\r\n  </PopupModal>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject, nextTick, computed } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport PopupModal from '../../components/ui/PopupModal.vue'\r\n\r\nconst { state, dispatch, commit } = useStore()\r\n\r\nconst menu = computed(() => state.menu.editMenus)\r\n\r\nconst TOAST_EL = inject('TOAST_EL')\r\nconst POPUP_EL = ref(null)\r\nconst INPUT_NAME_EL = ref(null)\r\n\r\nconst editState = ref(false)\r\nconst subName = ref(menu.value.sub)\r\nconst categoryName = ref(null)\r\n\r\nconst onEdit = async () => {\r\n  editState.value = true\r\n  await nextTick()\r\n  INPUT_NAME_EL.value.focus()\r\n}\r\n\r\nconst onAddCategory = () => {\r\n  if (categoryName.value) {\r\n    commit('menu/ADD_CATEGORY', categoryName.value)\r\n    categoryName.value = null\r\n  } else {\r\n    TOAST_EL.value.open('error', '카테고리명을 입력해주세요.')\r\n  }\r\n}\r\n\r\nconst onDelCategory = (idx) => {\r\n  commit('menu/DEL_CATEGORY', idx)\r\n}\r\n\r\nconst onUpdateMenu = async () => {\r\n  if (subName.value) {\r\n    const { success, error } = await dispatch('menu/updateMenu', {\r\n      menuId: menu.value._id,\r\n      payload: { sub: subName.value, categories: menu.value.categories },\r\n    })\r\n    if (!success) {\r\n      TOAST_EL.value.open('error', error)\r\n    } else {\r\n      TOAST_EL.value.open('success', '메뉴가 변경되었습니다.')\r\n      editState.value = false\r\n      close()\r\n    }\r\n  } else {\r\n    TOAST_EL.value.open('error', '서브명을 입력해주세요.')\r\n  }\r\n}\r\n\r\nconst open = () => {\r\n  POPUP_EL.value?.open()\r\n}\r\n\r\nconst close = () => {\r\n  POPUP_EL.value?.close()\r\n}\r\n\r\ndefineExpose({ open, close })\r\n</script>\r\n\r\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\r\n.wrap_edit-menu {\r\n  background: #fff;\r\n  padding: 3.2rem 3.2rem;\r\n  font-size: 1.4rem;\r\n  color: var(--text4);\r\n  width: 37rem;\r\n  border-radius: 3.2rem;\r\n  overflow-y: auto;\r\n\r\n  @include mobile {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 0;\r\n  }\r\n\r\n  label {\r\n    color: var(--primary);\r\n  }\r\n\r\n  .wrap_btn-close {\r\n    @include flex-right;\r\n    margin: 0 0 2.4rem;\r\n  }\r\n\r\n  .wrap_menu {\r\n    @include flex;\r\n    border-bottom: 1px solid var(--border2);\r\n    padding: 0 0 1rem;\r\n\r\n    h2 {\r\n      text-transform: uppercase;\r\n      width: 78%;\r\n    }\r\n\r\n    input {\r\n      text-transform: uppercase;\r\n      width: 78%;\r\n      font-size: 1.5em;\r\n      padding: 0 1.2rem 0 0;\r\n    }\r\n  }\r\n\r\n  .wrap_categories,\r\n  .wrap_sub {\r\n    padding: 3.2rem 0 0;\r\n\r\n    ul {\r\n      margin: 0 0 3.2rem 0;\r\n      li {\r\n        margin: 1.6rem 0 0;\r\n        font-size: 1.4rem;\r\n\r\n        .btn_del {\r\n          margin: 0 0 0 0.4rem;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .wrap_add-category {\r\n    @include flex($ai: initial);\r\n    margin: 0.8rem 0 0;\r\n\r\n    input {\r\n      flex: auto;\r\n      border-bottom: 1px solid #ddd;\r\n      margin: 0 1.2rem 0 0;\r\n    }\r\n  }\r\n\r\n  .btn-submit {\r\n    margin: 3.2rem 0 0;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./EditSub.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditSub.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EditSub.vue?vue&type=style&index=0&id=2522c31e&lang=scss&rel=stylesheet%2Fscss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\kimku\\\\OneDrive\\\\바탕 화면\\\\FRONTEND\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2522c31e\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"wrap_menus\">\r\n    <ul class=\"ul_menus\">\r\n      <li v-for=\"(value, key) in menus\" :key=\"key\" class=\"menu\" @click=\"() => onSetLayout('edit-main', value)\">\r\n        <span class=\"span_main\">💜 {{ key }}</span>\r\n        <ul>\r\n          <li v-for=\"v in value\" :key=\"v.sub\" class=\"sub\" @click.stop=\"() => onSetLayout('edit-sub', v)\">\r\n            <span class=\"span_sub\">📁 {{ v.sub }}</span>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n\r\n    <div class=\"wrap_layout\" v-if=\"key\">\r\n      <component :is=\"LAYOUTS[key]\" ref=\"LAYOUT_EL\" />\r\n    </div>\r\n\r\n    <div class=\"wrap_btns\">\r\n      <Button shape=\"line-round\" theme=\"primary\" @click=\"() => onSetLayout('add-menu')\" class=\"btn-submit\">메인 메뉴 생성</Button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, ref, nextTick } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport AddMenu from './AddMenu.vue'\r\nimport EditMain from './EditMain.vue'\r\nimport EditSub from './EditSub.vue'\r\n\r\nconst { state, commit } = useStore()\r\nconst menus = computed(() => state.menu.menus)\r\n\r\nconst LAYOUTS = {\r\n  'add-menu': AddMenu,\r\n  'edit-main': EditMain,\r\n  'edit-sub': EditSub,\r\n}\r\n\r\nconst LAYOUT_EL = ref(null)\r\nconst key = ref(null)\r\n\r\nconst onSetLayout = async (k, menus) => {\r\n  key.value = k\r\n  if (menus) commit('menu/SET_EDIT_MENUS', menus)\r\n  await nextTick()\r\n  LAYOUT_EL.value.open()\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\r\n.wrap_menus {\r\n  color: var(--text4);\r\n\r\n  .ul_menus {\r\n    width: 24rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 1.2rem;\r\n    padding: 1.6rem 0 0;\r\n  }\r\n\r\n  ul > li {\r\n    font-size: 1.4rem;\r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n    position: relative;\r\n\r\n    & > ul {\r\n      margin: 1.6rem 0 0;\r\n\r\n      li {\r\n        padding: 0 2.4rem;\r\n      }\r\n    }\r\n  }\r\n  .menu {\r\n    &:not(:last-child) {\r\n      border-bottom: 1px solid #ddd;\r\n      margin: 0 0 1.6rem 0;\r\n    }\r\n\r\n    .span_main {\r\n      margin: 0 0 0 2.4rem;\r\n      font-weight: 700;\r\n    }\r\n  }\r\n  .sub {\r\n    padding: 1.6rem 0 1.6rem 6.4rem;\r\n    border-top: 1px dashed #ddd;\r\n    width: calc(24rem - 6.4rem);\r\n  }\r\n  .wrap_btns {\r\n    margin: 2.4rem 0 0;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./ManageMenus.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageMenus.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ManageMenus.vue?vue&type=style&index=0&id=0ec59b86&lang=scss&rel=stylesheet%2Fscss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\kimku\\\\OneDrive\\\\바탕 화면\\\\FRONTEND\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0ec59b86\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"dashboard\">\r\n    <ul class=\"ul_chips\">\r\n      <li v-for=\"(value, key) in CHIPS\" :key=\"key\" class=\"chip\">\r\n        <router-link :to=\"{ name: 'dashboard', params: { section: key } }\" custom v-slot=\"{ navigate }\">\r\n          <span @click=\"navigate\" :data-set=\"key\" role=\"link\" ref=\"CHIP_EL\">{{ value }}</span>\r\n        </router-link>\r\n      </li>\r\n    </ul>\r\n\r\n    <Suspense>\r\n      <template #default>\r\n        <component :is=\"LAYOUTS[section]\" />\r\n      </template>\r\n      <template #fallback> 부르는 중.. </template>\r\n    </Suspense>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watchEffect } from 'vue'\r\nimport Chart from './Chart.vue'\r\nimport Members from './Members.vue'\r\nimport ManagePosts from './ManagePosts.vue'\r\nimport ManageMenus from './ManageMenus.vue'\r\n\r\nconst LAYOUTS = {\r\n  chart: Chart,\r\n  members: Members,\r\n  'manage-posts': ManagePosts,\r\n  'manage-menus': ManageMenus,\r\n}\r\n\r\nconst CHIPS = {\r\n  chart: '통계',\r\n  members: '회원 목록',\r\n  'manage-posts': '포스팅 관리',\r\n  'manage-menus': '메뉴 설정',\r\n}\r\n\r\nconst props = defineProps({\r\n  section: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n})\r\n\r\nconst CHIP_EL = ref(null)\r\n\r\nwatchEffect(() => {\r\n  if (CHIP_EL.value) {\r\n    CHIP_EL.value.forEach((el) => {\r\n      el.classList.remove('on')\r\n      if (el.dataset.set === props.section) el.classList.add('on')\r\n    })\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\r\n.dashboard {\r\n  .ul_chips {\r\n    @include flex;\r\n    margin: 0 0 3.2rem;\r\n\r\n    li { \r\n      margin: 0 0.8rem 0 0;\r\n      padding: 0.8rem 1.2rem;\r\n      border-radius: 1.6rem;\r\n      font-size: 1.4rem;\r\n      letter-spacing: 0.1rem;\r\n      background-color: #ededed;\r\n      color: var(--text4);\r\n      cursor: pointer;\r\n\r\n      &:last-child {\r\n        margin: 0;\r\n      }\r\n    }\r\n\r\n    span {\r\n\r\n      &.on {\r\n        color: var(--primary);\r\n        font-weight: 500;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import script from \"./Dashboard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Dashboard.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Dashboard.vue?vue&type=style&index=0&id=1548e022&lang=scss&rel=stylesheet%2Fscss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\kimku\\\\OneDrive\\\\바탕 화면\\\\FRONTEND\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1548e022\"]])\n\nexport default __exports__"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","height1","width1","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","positionAxisID1","value1","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","i1","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","plugin_colors","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","hitbox1","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","CHART1_EL","ref","CHART2_EL","colors1","colors2","randomNumber1","random","randomNumber2","randomNumber3","randomNumber4","creatChart","Chart","lineTension","pointBorderColor","pointBackgroundColor","shuffle","onMounted","__exports__","dispatch","commit","state","useStore","TOAST_EL","inject","ACCOUNT_EL","CHECKBOX_EL","computed","auth","editMembers","tableHeads","getMembers","async","success","open","onUpdateMember","member","checkedMember","checkedMembers","checkbox","checked","at","_id","nickname","isActive","onUpdateActive","updateMembers","alert","payload","resetCheckbox","editPosts","post","POPUP_EL","main","category","onChangeMainMenu","querySelector","selectedIndex","onChangeSubMenu","setPayload","onUpdatePosts","close","expose","useRouter","MOVE_POSTS_EL","posts","maxCount","page","maxPage","searchText","onUpdatePage","newPage","getPosts","query","subQuery","curPage","onUpdatePost","postId","checkedPosts","updatePosts","INPUT_NAME_EL","mainName","subName","categoryName","categories","onAddCategory","onDelCategory","onCreateMenu","nextTick","focus","menu","editMenus","editState","onEdit","onUpdateMenu","menuId","menus","onDelSubMenu","LAYOUTS","AddMenu","EditMain","EditSub","LAYOUT_EL","onSetLayout","Members","ManagePosts","ManageMenus","CHIPS","CHIP_EL","watchEffect","classList","section"],"sourceRoot":""}