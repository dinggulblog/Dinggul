{"version":3,"file":"js/post.6d4b4743.js","mappings":"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","sources":["webpack://DINGGUL/./src/components/ui/Toggle.vue","webpack://DINGGUL/./src/components/CommentEditor.vue","webpack://DINGGUL/./src/components/CommentEditor.vue?a85e","webpack://DINGGUL/./src/components/slots/Info.vue","webpack://DINGGUL/./src/components/slots/Info.vue?2156","webpack://DINGGUL/./src/components/Comment.vue","webpack://DINGGUL/./src/components/Comment.vue?b2d9","webpack://DINGGUL/./src/views/post/Post.vue","webpack://DINGGUL/./src/views/post/Post.vue?b2a9"],"sourcesContent":["import script from \"./Toggle.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Toggle.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Toggle.vue?vue&type=style&index=0&id=38d0afd3&lang=scss&rel=stylesheet%2Fscss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\kimku\\\\OneDrive\\\\바탕 화면\\\\FRONTEND\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-38d0afd3\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"commentEditor\" @mousedown=\"!$store.state.auth.user && ACCOUNT_EL.open('login')\">\r\n\r\n    <textarea\r\n      ref=\"CONTENT_EL\"\r\n      rows=\"1\"\r\n      v-model=\"content\"\r\n      :disabled=\"!$store.state.auth.user\"\r\n      :placeholder=\"!$store.state.auth.user ? '로그인 후 댓글을 작성해보세요.' : placeholderText\"\r\n      @blur=\"!$store.state.auth.user ? '로그인 후 댓글을 작성해보세요.' : placeholderText\"\r\n      @input=\"resizeTextarea\"\r\n    />\r\n\r\n    <div class=\"wrap_btns\">\r\n      <div class=\"wrap_toggle\">\r\n        <Toggle :isPublic=\"isPublic\" @update=\"onUpdatedIsPublic\" />\r\n      </div>\r\n      <div class=\"wrap_submit\">\r\n        <div class=\"submit\">\r\n          <Button \r\n            class=\"btn_submit\"\r\n            :shape=\"'fill-round'\"\r\n            :theme=\"'primary'\"\r\n            @click=\"commentId ? onUpdateComment() : onCreateComment()\">\r\n            {{ commentId ? '댓글 수정' : '댓글 작성' }}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n  import { inject, ref, computed, onMounted } from 'vue'\r\n  import { useStore } from 'vuex'\r\n  import { resizeTextarea } from '../common/util.js'\r\n  import Toggle from './ui/Toggle.vue'\r\n\r\n  const props = defineProps({\r\n    id: {\r\n      type: String,\r\n      default: 'comment'\r\n    },\r\n    postId: {\r\n      type: String,\r\n      reqired: true,\r\n    },\r\n    isOwner: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    placeholderText: {\r\n      type: String,\r\n      default: '댓글을 작성해보세요.',\r\n    },\r\n  })\r\n\r\n  const emits = defineEmits(['closeEditor'])\r\n\r\n  const { state, dispatch, commit } = useStore()\r\n\r\n  const CONTENT_EL = ref(null)\r\n  const ACCOUNT_EL = inject('ACCOUNT_EL')\r\n  const TOAST_EL = inject('TOAST_EL')\r\n\r\n  const commentId = computed({\r\n    get: () => state.comment[props.id]._id\r\n  })\r\n  const isPublic = computed({\r\n    get: () => state.comment[props.id].isPublic,\r\n    set: (value) => commit('comment/SET_IS_PUBLIC', { id: props.id, isPublic: value })\r\n  })\r\n  const content = computed({\r\n    get: () => state.comment[props.id].content,\r\n    set: (value) => commit('comment/SET_CONTENT', { id: props.id, content: value })\r\n  })\r\n\r\n  const onUpdatedIsPublic = (state) => {\r\n    isPublic.value = state\r\n  }\r\n\r\n  const onCreateComment = async () => {\r\n    const { success, error } = await dispatch('comment/createComment', {\r\n      parentId: props.id !== 'comment' ? props.id : undefined,\r\n      postId: props.postId,\r\n      content: content.value,\r\n      isPublic: isPublic.value\r\n    })\r\n\r\n    if (!success) return TOAST_EL.value.open('error', error)\r\n\r\n    emits('closeEditor')\r\n    CONTENT_EL.value.style.height = ''\r\n  }\r\n\r\n  const onUpdateComment = async () => {\r\n    const { success, error } = await dispatch('comment/updateComment', {\r\n      commentId: commentId.value,\r\n      postId: props.postId,\r\n      content: content.value,\r\n      isPublic: isPublic.value,\r\n    })\r\n\r\n    if (!success) return TOAST_EL.value.open('error', error)\r\n\r\n    emits('closeEditor')\r\n    CONTENT_EL.value.style.height = ''\r\n  }\r\n\r\n  onMounted(() => {\r\n    if(props.id === 'comment') return\r\n    CONTENT_EL.value.focus()\r\n  })\r\n</script>\r\n\r\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\r\n  .commentEditor {\r\n    margin: 2.4rem 0 0 0;\r\n    border: 1px solid var(--border2);\r\n    border-radius: 0.8rem;\r\n    padding: 2rem;\r\n\r\n    textarea {\r\n      color: var(--text4);\r\n      font-size: 1.4rem;\r\n      margin: 0 0 1.6rem;\r\n      resize: none;\r\n      overflow-y: hidden;\r\n      height: 4.8rem;\r\n\r\n      @include placeholder(text2);\r\n\r\n      &:disabled {\r\n        background-color: transparent;\r\n      }\r\n    }\r\n\r\n    .wrap_btns {\r\n      @include flex-right;\r\n\r\n      .wrap_toggle {\r\n        flex-basis: 50%;\r\n\r\n        .toggle {\r\n          @include flex;\r\n          user-select: none;\r\n          cursor: pointer;\r\n\r\n          span {\r\n            margin: 0 0 0 0.8rem;\r\n            font-size: 1.2rem;\r\n            font-weight: 500;\r\n            letter-spacing: 0.1rem;\r\n          }\r\n        }\r\n      }\r\n\r\n      .wrap_submit {\r\n        @include flex-right;\r\n        flex-basis: 50%;\r\n      }\r\n    }\r\n  }\r\n</style>\r\n","import script from \"./CommentEditor.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CommentEditor.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CommentEditor.vue?vue&type=style&index=0&id=5364be50&lang=scss&rel=stylesheet%2Fscss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\kimku\\\\OneDrive\\\\바탕 화면\\\\FRONTEND\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5364be50\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"info\">\r\n    <ul>\r\n      <slot name=\"createdAt\"></slot>\r\n      <slot name=\"category\"></slot>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script></script>\r\n\r\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\r\n.info {\r\n  ul {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    &:deep(li) {\r\n      margin: 0 1.2rem 0 0;\r\n      padding: 0 0 0 1.2rem;\r\n      display: flex;\r\n      align-items: center;\r\n      position: relative;\r\n\r\n      span {\r\n        font-size: 1.3rem;\r\n        color: var(--text2);\r\n      }\r\n\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        left: 0;\r\n        width: 0.01rem;\r\n        height: 1.2rem;\r\n        background-color: var(--border3);\r\n      }\r\n\r\n      &:first-child {\r\n        padding: 0;\r\n\r\n        &::before {\r\n          display: none;\r\n        }\r\n      }\r\n\r\n      &:last-child {\r\n        margin: 0;\r\n      }\r\n\r\n      .author {\r\n        align-items: center;\r\n        flex-direction: row;\r\n\r\n        .avatar {\r\n          width: 3.2rem;\r\n          height: 3.2rem;\r\n          border-radius: 50%;\r\n          object-fit: cover;\r\n          margin: 0 0.8rem 0 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./Info.vue?vue&type=template&id=74ca9d0e&scoped=true\"\nconst script = {}\n\nimport \"./Info.vue?vue&type=style&index=0&id=74ca9d0e&lang=scss&rel=stylesheet%2Fscss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\kimku\\\\OneDrive\\\\바탕 화면\\\\FRONTEND\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-74ca9d0e\"]])\n\nexport default __exports__","<template>\r\n  <li class=\"comment_item\">\r\n    <div class=\"wrap_item\">\r\n      <div class=\"wrap_header\">\r\n        <div class=\"wrap_left\">\r\n          \r\n          <!-- Commenter -->\r\n          <User :profile=\"comment.commenter\" />\r\n\r\n          <!-- Comment Info -->\r\n          <Info>\r\n            <template #createdAt>\r\n              <li><span class=\"createdAt\">{{ getTime(comment.createdAt) }}</span></li>\r\n            </template>\r\n          </Info>\r\n\r\n          <!-- Reply Button -->\r\n          <div class=\"wrap_reply_btn\" v-if=\"comment.isActive && !!$store.state.auth.user\">\r\n            <Button\r\n              class=\"btn_reply\"\r\n              :theme=\"'primary'\"\r\n              @click=\"!isOpenEditor ? onOpenEditor(false) : onCloseEditor()\"\r\n              aria-label=\"create reply\">\r\n              {{ !isOpenEditor ? '답글 작성' : '에디터 닫기' }}\r\n            </Button>\r\n          </div>\r\n\r\n        </div><!-- wrap_left end -->\r\n\r\n        <div class=\"wrap_right\" v-if=\"comment.isActive\">\r\n          <Button\r\n            class=\"btn_dropbox\"\r\n            :size=\"'sm'\"\r\n            :svg=\"'more'\"\r\n            @click=\"$refs.ACTION_SLOT_EL.onToggle()\"\r\n            aria-label=\"option\"\r\n          />\r\n          <Kebab \r\n            ref=\"ACTION_SLOT_EL\"\r\n            :dropboxItems=\"!isOwner\r\n              ? { '댓글 복사': onCopyComment }\r\n              : { '댓글 복사': onCopyComment, '댓글 수정': () => onOpenEditor(true), '댓글 삭제': onDeleteComment }\"\r\n          />\r\n        </div><!-- wrap_right end -->\r\n      </div><!-- wrap_header end -->\r\n\r\n      <!-- Content -->\r\n      <div class=\"content\">\r\n        <p>\r\n          <span v-if=\"parentComment\" class=\"receiver\">@ {{ parentComment?.commenter?.nickname }}</span>\r\n          <Ico  v-if=\"!comment.isPublic\" class=\"lock_ico\" :size=\"'sm'\" :svg=\"'lock'\" :color=\"'var(--text2)'\" />\r\n          <span v-if=\"!comment.isActive\"><i>*** 삭제된 댓글입니다. ***</i></span>\r\n          <span v-else-if=\"!comment.isPublic && !isAuthor && !isOwner\"><strong>비밀</strong> 댓글입니다. 게시물 작성자와 관리자만 볼 수 있어요.</span>\r\n          <span v-else>{{ comment.content }}</span>\r\n        </p>\r\n        <Button\r\n          v-if=\"comment.childCommentCount\"\r\n          class=\"btn_childComment_toggle\"\r\n          :svg=\"!isOpenChildren ? 'arrow-down' : 'arrow-up'\"\r\n          :size=\"'sm'\"\r\n          :theme=\"'primary'\"\r\n          @click=\"onToggleChildren\"\r\n          aria-label=\"open reply\">\r\n          {{ '답글 ' + comment.childCommentCount + '개' }}\r\n        </Button>\r\n      </div>\r\n\r\n      <!-- Hided Editor -->\r\n      <CommentEditor\r\n        v-if=\"isOpenEditor\"\r\n        :id=\"comment._id\"\r\n        :postId=\"postId\"\r\n        @closeEditor=\"onCloseEditor\"\r\n      />\r\n    </div><!-- wrap_item end -->\r\n\r\n    <!-- Children Comments -->\r\n    <ul class=\"comment_childItem\" v-if=\"comment.childComments && isOpenChildren\">\r\n      <Comment\r\n        v-for=\"childComment in comment.childComments\"\r\n        :key=\"childComment._id\"\r\n        :postId=\"postId\"\r\n        :comment=\"childComment\"\r\n        :isOwner=\"childComment.commenter._id === $store.state.auth.user?._id\"\r\n        :isAuthor=\"isAuthor\"\r\n      />\r\n    </ul>\r\n  </li>\r\n</template>\r\n\r\n<script setup>\r\n  import { inject, ref, toRefs, computed } from 'vue'\r\n  import { useStore } from 'vuex'\r\n  import { getTime } from '../common/time.js'\r\n  import Comment from './Comment.vue'\r\n  import CommentEditor from './CommentEditor.vue'\r\n  import User from './User.vue'\r\n  import Info from './slots/Info.vue'\r\n\r\n  const props = defineProps({\r\n    postId: {\r\n      type: String,\r\n      required: true,\r\n      default: '',\r\n    },\r\n    comment: {\r\n      type: Object,\r\n      required: true,\r\n      default: () => ({}),\r\n    },\r\n    isOwner: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    isAuthor: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  })\r\n\r\n  const { getters, dispatch, commit } = useStore()\r\n\r\n  const DIALOG_EL = inject('DIALOG_EL')\r\n  const TOAST_EL = inject('TOAST_EL')\r\n\r\n  const { comment, postId, isOwner } = toRefs(props)\r\n  const isOpenEditor = ref(false)\r\n  const isOpenChildren = ref(false)\r\n  const parentComment = computed(() => getters['comment/getParentComment'](comment.value?.parentComment))\r\n\r\n  const onOpenEditor = (update = false) => {\r\n    commit('comment/SET_COMMENT',{ update, comment: comment.value })\r\n    isOpenEditor.value = true\r\n  }\r\n\r\n  const onCloseEditor = () => {\r\n    isOpenEditor.value = false\r\n  }\r\n\r\n  const onToggleChildren = () => {\r\n    isOpenChildren.value = !isOpenChildren.value\r\n  }\r\n\r\n  const onCopyComment = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(comment.value.content)\r\n      TOAST_EL.value.open('success', '댓글 내용이 복사되었습니다')\r\n    } catch {\r\n      TOAST_EL.value.open('error', '댓글 내용 복사에 실패하였습니다.')\r\n    }\r\n  }\r\n\r\n  const onDeleteComment = async () => {\r\n    const ok = await DIALOG_EL.value.show({\r\n      title: '댓글 삭제',\r\n      message: '해당 댓글을 삭제하시겠습니까?\\n한번 삭제된 댓글은 되돌릴 수 없습니다.',\r\n    })\r\n    if (!ok) return\r\n\r\n    const { success, error } = await dispatch('comment/deleteComment', {\r\n      commentId: comment.value._id,\r\n      postId: postId.value,\r\n      isOwner: isOwner.value\r\n    })\r\n\r\n    success\r\n      ? TOAST_EL.value.open('success', '댓글이 삭제되었습니다.')\r\n      : TOAST_EL.value.open('error', error)\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\r\n  .comment_items > li > ul {\r\n    margin: -2.4rem 0 0 2.4rem;\r\n  }\r\n\r\n  .comment_item {\r\n    .wrap_item {\r\n      margin: 0 0 6.4rem;\r\n\r\n      .wrap_header {\r\n        @include flex;\r\n        margin: 0 0 2.4rem;\r\n\r\n        .wrap_left {\r\n          @include flex;\r\n          width: 90%;\r\n\r\n          &:deep(.user-info) {\r\n            &::after {\r\n             content: \"·\";\r\n              margin: 0 0.8rem;\r\n              color: var(--text2);\r\n              }\r\n          }\r\n\r\n          .wrap_reply_btn {\r\n            margin: 0 0 0 3.2rem;\r\n          }\r\n        }\r\n\r\n        .wrap_right {\r\n          @include flex(column, $jc: center, $ai: end);\r\n          flex-basis: 20%;\r\n        }\r\n      }\r\n\r\n      .content {\r\n\r\n        p {\r\n          color: var(--text3);\r\n          font-size: 1.4rem;\r\n          white-space: pre;\r\n\r\n          .lock_ico {\r\n            margin: 0 0.8rem 0 0;\r\n          }\r\n\r\n          .receiver {\r\n            font-weight: 500;\r\n            color: var(--primary);\r\n            border-radius: 3.2rem;\r\n            margin: 0 0.8rem 0 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .not-is-acitve {\r\n    margin: 0 0 0rem;\r\n    font-size: 1.4rem;\r\n    color: var(--text3);\r\n\r\n    .content {\r\n      margin: 0 0 6.4rem;\r\n    }\r\n  }\r\n\r\n  .btn_childComment_toggle {\r\n    margin: 2.4rem 0 0;\r\n  }\r\n</style>\r\n","import script from \"./Comment.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Comment.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Comment.vue?vue&type=style&index=0&id=54fd9ef5&lang=scss&rel=stylesheet%2Fscss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\kimku\\\\OneDrive\\\\바탕 화면\\\\FRONTEND\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-54fd9ef5\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"post\" v-if=\"post\">\r\n    <div class=\"wrap_header\">\r\n      <div class=\"wrap_left\">\r\n        <!-- Post Title -->\r\n        <div class=\"wrap_title\">\r\n          <div class=\"title\">\r\n            <h2>{{ post.title }}</h2>\r\n            <span v-if=\"!post.isPublic\" class=\"ico_lock\">\r\n              <Ico :svg=\"'lock'\" :color=\"'var(--text2)'\" />\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Post Info -->\r\n        <div class=\"wrap_info\">\r\n          <Info>\r\n            <template #createdAt>\r\n              <li>\r\n                <span class=\"createdAt\">{{ getTime(post.createdAt) }}</span>\r\n              </li>\r\n            </template>\r\n            <template #category>\r\n              <li>\r\n                <span class=\"category\">{{ post.category }}</span>\r\n              </li>\r\n            </template>\r\n          </Info>\r\n        </div>\r\n      </div>\r\n      <!-- wrap_left end -->\r\n\r\n      <div class=\"wrap_right\">\r\n        <Button class=\"btn_dropbox\" :size=\"'sm'\" :svg=\"'more'\" @click=\"$refs.KEBAB_EL.onToggle()\" aria-label=\"option\" />\r\n        <Kebab\r\n          ref=\"KEBAB_EL\"\r\n          :dropboxItems=\"\r\n            !auth ? { '링크 복사': onCopyLink } : { '글 수정': () => $router.push({ name: 'editor', query: { postId: $store.state.post.post._id } }), '글 삭제': onDeletePost, '링크 복사': onCopyLink }\r\n          \" />\r\n      </div>\r\n      <!-- wrap_right end -->\r\n    </div>\r\n    <!-- wrap_header end -->\r\n\r\n    <!-- Post Content -->\r\n    <div class=\"content\" ref=\"CONTENT_EL\">\r\n      <MdEditor previewOnly :modelValue=\"post.content\" @onHtmlChanged=\"updated\" />\r\n    </div>\r\n\r\n    <!-- Post Likes -->\r\n    <div class=\"wrap_like\">\r\n      <div class=\"liked_count\">\r\n        <Ico class=\"ico_like\" :svg=\"'like-fill'\" :color=\"!post.liked ? 'var(--disable)' : 'var(--likeActive)'\" @click=\"onUpdateLike\" />\r\n        <span>{{ post.likeCount }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Author Profile -->\r\n    <div class=\"wrap_author\">\r\n      <User :profile=\"post.author\" />\r\n      <router-link v-if=\"post.author\" :to=\"{ name: 'profile', params: { nickname: post.author.nickname } }\" class=\"a_link\"> 프로필 보러가기 </router-link>\r\n    </div>\r\n\r\n    <!-- Link to another Post -->\r\n    <div class=\"wrap_link\">\r\n      <div v-for=\"linkedPost in post.linkedPosts\" :key=\"linkedPost?._id\" class=\"link\">\r\n        <span v-if=\"linkedPost.rel === 'prev'\">이전글</span>\r\n        <span v-else>다음글</span>\r\n        <Button class=\"btn_link\" @click=\"() => $router.push({ name: 'post', params: { postId: linkedPost._id } })\"> {{ linkedPost.title }} </Button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- TOC -->\r\n    <Teleport to=\"#content\">\r\n      <div class=\"wrap_toc\">\r\n        <ul class=\"toc\">\r\n          <li v-for=\"item in toc\" :key=\"item\">\r\n            <a\r\n              :href=\"'#' + item.getAttribute('id')\"\r\n              :class=\"item.getAttribute('id')\"\r\n              ref=\"TOC_EL\"\r\n              :style=\"item.tagName === 'H2' ? { marginLeft: '0.8rem' } : item.tagName === 'H3' ? { marginLeft: '1.6rem' } : ''\"\r\n              >{{ item.innerText }}</a\r\n            >\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </Teleport>\r\n  </div>\r\n  <!-- Post end -->\r\n\r\n  <div class=\"comment\">\r\n    <!-- Comments Editor -->\r\n    <CommentEditor :postId=\"postId\" />\r\n\r\n    <!-- Comments -->\r\n    <div class=\"comments\" ref=\"COMMENTS_EL\">\r\n      <h2>댓글 {{ $store.state.comment.commentCount }}개</h2>\r\n\r\n      <ul class=\"comment_items\">\r\n        <Comment\r\n          v-for=\"comment in $store.state.comment.comments\"\r\n          :key=\"comment._id\"\r\n          :postId=\"postId\"\r\n          :comment=\"comment\"\r\n          :isOwner=\"comment.commenter._id === $store.state.auth.user?._id\"\r\n          :isAuthor=\"post.author._id === $store.state.auth.user?._id\" />\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { inject, ref, computed, nextTick, watch, onErrorCaptured, onBeforeMount, onUnmounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport MdEditor from 'md-editor-v3'\r\nimport CommentEditor from '../../components/CommentEditor.vue'\r\nimport Comment from '../../components/Comment.vue'\r\nimport User from '../../components/User.vue'\r\nimport Info from '../../components/slots/Info.vue'\r\nimport { getTime } from '../../common/time'\r\nimport 'md-editor-v3/lib/style.css'\r\n\r\nconst props = defineProps({\r\n  postId: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n})\r\n\r\nconst { state, dispatch, commit } = useStore()\r\n\r\nconst DIALOG_EL = inject('DIALOG_EL')\r\nconst TOAST_EL = inject('TOAST_EL')\r\n\r\nconst CONTENT_EL = ref(null)\r\nconst COMMENTS_EL = ref(null)\r\nconst TOC_EL = ref(null)\r\n\r\nconst toc = ref(null)\r\nconst observedEl = ref(new Map())\r\nconst intersectEl = ref([])\r\n\r\nconst post = computed(() => state.post.post)\r\nconst auth = computed(() => state.auth.user && post.value.author?._id === state.auth.user._id)\r\n\r\nconst onDeletePost = async () => {\r\n  const ok = await DIALOG_EL.value.show({\r\n    title: '게시물 삭제',\r\n    message: '게시물을 삭제하시겠습니까?\\n한번 삭제된 게시물은 되돌릴 수 없습니다.',\r\n  })\r\n\r\n  if (ok) {\r\n    const { success, error } = await dispatch('post/deletePost')\r\n    if (!success) return TOAST_EL.value.open('error', error)\r\n  }\r\n}\r\n\r\nconst onUpdateLike = async () => {\r\n  const { success, error } = !post.value.liked ? await dispatch('post/updateLike') : await dispatch('post/deleteLike')\r\n\r\n  if (!success) TOAST_EL.value.open('error', error)\r\n}\r\n\r\nconst onCopyLink = async () => {\r\n  try {\r\n    await navigator.clipboard.writeText(window.location.href)\r\n    TOAST_EL.value.open('success', '클립보드에 게시물 링크가 복사되었습니다')\r\n  } catch {\r\n    TOAST_EL.value.open('error', '링크 복사에 실패하였습니다.')\r\n  }\r\n}\r\n\r\nconst callback = (entries, observer) => {\r\n  entries.map((entry) => {\r\n    if (entry.isIntersecting) {\r\n      observedEl.value.set(entry.target.id, entry)\r\n      intersectEl.value = [...observedEl.value.values()].filter((el) => el && el.isIntersecting)\r\n      TOC_EL.value.forEach((el) => el.classList.remove('on'))\r\n      if (intersectEl.value.length) {\r\n        TOC_EL.value.find((el) => el.getAttribute('class') === intersectEl.value[0].target.id).classList.add('on')\r\n      }\r\n    } else {\r\n      const idx = intersectEl.value.findIndex((el) => el.target.id === entry.target.id)\r\n      if (idx !== -1) intersectEl.value.splice(idx, 1)\r\n      observedEl.value.set(entry.target.id, entry)\r\n      TOC_EL.value.forEach((el) => el.classList.remove('on'))\r\n      if (intersectEl.value.length) {\r\n        TOC_EL.value.find((el) => el.getAttribute('class') === intersectEl.value[0].target.id).classList.add('on')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nconst observer = new IntersectionObserver(callback, { threshold: 0.5, rootMargin: '-114px 0px 0px 0px' })\r\n\r\nconst updated = async () => {\r\n  await nextTick()\r\n  observer.disconnect()\r\n  observedEl.value.clear()\r\n  toc.value = []\r\n  intersectEl.value = []\r\n\r\n  const tocElements = CONTENT_EL.value?.querySelectorAll('h1, h2, h3')\r\n\r\n  if (tocElements?.length) {\r\n    tocElements.forEach((el) => {\r\n      document.getElementById('md-editor-v3-preview-wrapper').style.overflow = 'initial'\r\n      el.style.scrollMarginTop = '11.4rem'\r\n      toc.value = Array.from(tocElements).map((el) => el)\r\n      observedEl.value.set(el.getAttribute('id'), null)\r\n      observer.observe(el)\r\n    })\r\n  }\r\n}\r\n\r\nwatch(\r\n  props,\r\n  async () => {\r\n    const { success, error } = await dispatch('post/getPost', { postId: props.postId })\r\n    if (!success) throw new Error(error)\r\n\r\n    const { success: success2, error: error2 } = await dispatch('comment/getComments', { postId: props.postId })\r\n    if (!success2) throw new Error(error2)\r\n\r\n    document.title = post.value?.title\r\n\r\n    if (state.post.quickMove && COMMENTS_EL.value) {\r\n      COMMENTS_EL.value.scrollIntoView({ behavior: 'smooth' })\r\n      commit('post/SET_QUICKMOVE', false)\r\n    }\r\n  },\r\n  { immediate: true },\r\n)\r\n\r\nonBeforeMount(() => {\r\n  commit('post/UNSET_POST')\r\n  commit('comment/UNSET_COMMENTS')\r\n})\r\n\r\nonUnmounted(() => {\r\n  observer.disconnect()\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\r\n.post {\r\n  .wrap_header {\r\n    @include flex;\r\n\r\n    .wrap_left {\r\n      @include flex(column, $ai: start);\r\n      flex-basis: 80%;\r\n      padding: 0 0 0 2.4rem;\r\n      border-left: 1px solid var(--primary);\r\n\r\n      .wrap_title {\r\n        margin-bottom: 2.4rem;\r\n        .title {\r\n          @include flex;\r\n\r\n          h2 {\r\n            font-size: 2rem;\r\n            color: var(--text4);\r\n            font-weight: 400;\r\n            @include ellipsis(1);\r\n            white-space: pre-wrap;\r\n          }\r\n\r\n          .ico_lock {\r\n            margin: 0 0 0 1.6rem;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .wrap_right {\r\n      @include flex(column, $jc: center, $ai:end);\r\n      flex-basis: 20%;\r\n    }\r\n  }\r\n\r\n  .content {\r\n    margin: 6.4rem 0;\r\n    font-size: 1.4rem;\r\n    color: var(--text3);\r\n    line-height: 1.5;\r\n\r\n    .markdown {\r\n      p {\r\n        box-sizing: border-box;\r\n        img {\r\n          width: 100%;\r\n          height: 100%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .wrap_like {\r\n    @include flex-col-center;\r\n\r\n    .liked_count {\r\n      @include flex-center;\r\n      border: 1px solid var(--border3);\r\n      border-radius: 3.2rem;\r\n      padding: 0.6rem 1.2rem;\r\n\r\n      span {\r\n        color: var(--text2);\r\n        font-size: 1.2rem;\r\n      }\r\n\r\n      .ico_like {\r\n        margin-right: 0.8rem;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n\r\n    .liked_user {\r\n      ul > li {\r\n        @include flex-col-center;\r\n\r\n        img {\r\n          border-radius: 50%;\r\n          width: 3.6rem;\r\n          height: 3.6rem;\r\n          object-fit: cover;\r\n        }\r\n\r\n        span {\r\n          font-size: 1.2rem;\r\n          color: var(--text3);\r\n          margin: 0.8rem 0 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .wrap_author {\r\n    @include position;\r\n    margin: 6.4rem 0 0;\r\n\r\n    &:deep(.user-info) {\r\n      .wrap_avatar {\r\n        .avatar {\r\n          width: 9.6rem;\r\n          height: 9.6rem;\r\n\r\n          @include mobile {\r\n            width: 6.4rem;\r\n            height: 6.4rem;\r\n          }\r\n        }\r\n      }\r\n      .wrap_nickname_greetings {\r\n        color: var(--text3);\r\n        .nickname {\r\n          font-size: 1.6rem;\r\n          font-weight: 500;\r\n          width: 10rem;\r\n          @include ellipsis(1);\r\n          word-break: break-all;\r\n          color: var(--text3);\r\n        }\r\n\r\n        .greetings {\r\n          margin: 1.6rem 0 0;\r\n          font-size: 1.4rem;\r\n          @include ellipsis(2);\r\n          color: var(--text3);\r\n\r\n          @include mobile {\r\n            -webkit-line-clamp: 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .a_link {\r\n      @include position(absolute, $t: 0, $r: 0);\r\n      font-size: 1.4rem;\r\n      text-decoration: underline;\r\n      color: var(--primary);\r\n      margin: 0.3rem 0 0;\r\n    }\r\n  }\r\n\r\n  .wrap_link {\r\n    margin: 4.8rem 0 4.8rem;\r\n    border-top: 1px solid var(--border2);\r\n\r\n    .link {\r\n      @include flex;\r\n      padding: 1.6rem 0;\r\n      width: 100%;\r\n\r\n      &:first-child,\r\n      &:last-child {\r\n        border-bottom: 1px solid var(--border2);\r\n      }\r\n\r\n      span {\r\n        font-size: 1.4rem;\r\n        margin: 0 1.2rem 0 0;\r\n        color: var(--primary);\r\n        font-weight: 500;\r\n        min-width: 4rem;\r\n      }\r\n\r\n      .btn_link {\r\n        font-size: 1.4rem;\r\n        @include ellipsis(1);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.comment {\r\n  .comments {\r\n    margin: 6.4rem 0 0;\r\n  }\r\n\r\n  h2 {\r\n    color: var(--primary);\r\n    font-weight: 400;\r\n    font-size: 1.6rem;\r\n    margin: 0 0 3.2rem 0;\r\n  }\r\n}\r\n\r\n.md-editor-content .md-editor-preview-wrapper {\r\n  overflow: auto !important;\r\n}\r\n\r\n[class*='md-editor'] {\r\n  overflow: initial !important;\r\n}\r\n\r\n\r\n\r\n\r\n</style>\r\n","import script from \"./Post.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Post.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Post.vue?vue&type=style&index=0&id=8a622bf0&lang=scss&rel=stylesheet%2Fscss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\kimku\\\\OneDrive\\\\바탕 화면\\\\FRONTEND\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-8a622bf0\"]])\n\nexport default __exports__"],"names":["__exports__","state","dispatch","commit","useStore","CONTENT_EL","ref","ACCOUNT_EL","inject","TOAST_EL","commentId","computed","get","comment","props","id","_id","isPublic","set","value","content","onUpdatedIsPublic","onCreateComment","async","success","error","parentId","undefined","postId","open","emits","style","height","onUpdateComment","onMounted","focus","class","_createElementBlock","_hoisted_1","_createElementVNode","_renderSlot","_ctx","$slots","script","render","getters","DIALOG_EL","isOwner","toRefs","isOpenEditor","isOpenChildren","parentComment","onOpenEditor","update","onCloseEditor","onToggleChildren","onCopyComment","navigator","clipboard","writeText","onDeleteComment","ok","show","title","message","COMMENTS_EL","TOC_EL","toc","observedEl","Map","intersectEl","post","auth","user","author","onDeletePost","onUpdateLike","liked","onCopyLink","window","location","href","callback","entries","observer","map","entry","isIntersecting","target","values","filter","el","forEach","classList","remove","length","find","getAttribute","add","idx","findIndex","splice","IntersectionObserver","threshold","rootMargin","updated","nextTick","disconnect","clear","tocElements","querySelectorAll","document","getElementById","overflow","scrollMarginTop","Array","from","observe","watch","Error","success2","error2","quickMove","scrollIntoView","behavior","immediate","onBeforeMount","onUnmounted"],"sourceRoot":""}